# Multi-Tenant SQL Agent Configuration
# Copy this file to .env and fill in your actual values

# --- LLM Configuration ---
# Required: OpenAI API key for GPT-4 access
OPENAI_API_KEY=your_openai_api_key_here

# --- Database Configuration ---
# Required: PostgreSQL database credentials
DATABASE_URL=postgresql://vishwadeeptehlan:Database@123@localhost:5432/portfoliosql
DB_USER=vishwadeeptehlan
DB_PASSWORD=Database@123
DB_HOST=localhost
DB_PORT=5432
DB_NAME=portfoliosql

# --- Schema-per-Tenant Configuration ---
# Central database for schema-per-tenant architecture
PORTFOLIOSQL_DB_NAME=portfoliosql
# Enable schema-per-tenant globally (overrides feature flags)
ENABLE_SCHEMA_PER_TENANT=false
# Maximum chat history messages per session
MAX_CHAT_HISTORY_MESSAGES=100

# --- LangSmith Configuration (Optional) ---
# Enable LangSmith tracing for monitoring and debugging
LANGCHAIN_TRACING_V2=false
LANGCHAIN_API_KEY=your_langsmith_api_key_here
LANGCHAIN_ENDPOINT=https://api.smith.langchain.com
LANGCHAIN_PROJECT=Multi-DB SQL Agent

# --- Application Configuration (Optional) ---
# Application Environment
ENVIRONMENT=development
DEBUG=false

# Redis Configuration (Message Broker for Celery)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=
REDIS_URL=redis://localhost:6379/0

# Celery Configuration
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0
TASK_TIMEOUT=300

# Frontend Settings
FRONTEND_HOST=localhost
FRONTEND_PORT=3001

# --- Multi-Agent System Configuration ---
# Multi-agent orchestrator settings
MAX_AGENT_ITERATIONS=10
AGENT_TIMEOUT_SECONDS=300
ENABLE_WEB_RESEARCH=true
ENABLE_AGENT_CACHING=true

# OpenAI Model Configuration for Agents
AGENT_MODEL=gpt-4o
AGENT_TEMPERATURE=0.3
AGENT_MAX_TOKENS=3000

# Web Agent Configuration
WEB_SEARCH_ENABLED=false
WEB_SCRAPING_TIMEOUT=30
MAX_WEB_SOURCES=5

# Data Formatter Configuration
ENABLE_CHART_GENERATION=true
MAX_CHART_DATA_POINTS=100

# Expert Agent Configuration
MUTUAL_FUND_EXPERT_ENABLED=true
FINANCIAL_ANALYSIS_DEPTH=comprehensive

# --- API Server Configuration (Optional) ---
# API server host and port
API_HOST=localhost
API_PORT=8001

# CORS allowed origins (comma-separated)
# Default: http://localhost:3001,http://127.0.0.1:3001,http://localhost:3000,http://127.0.0.1:3000
CORS_ORIGINS=http://localhost:3001,http://127.0.0.1:3001,http://localhost:3000,http://127.0.0.1:3000

# --- Feature Flags for Schema-per-Tenant Migration ---
# Enable schema-per-tenant architecture (gradual rollout)
FEATURE_SCHEMA_PER_TENANT=false
FEATURE_SCHEMA_PER_TENANT_PERCENTAGE=0.0
FEATURE_SCHEMA_PER_TENANT_USERS=

# Enable PostgreSQL-backed chat history
FEATURE_POSTGRESQL_CHAT_HISTORY=false
FEATURE_POSTGRESQL_CHAT_HISTORY_PERCENTAGE=0.0
FEATURE_POSTGRESQL_CHAT_HISTORY_USERS=

# Enable new file upload process
FEATURE_NEW_FILE_UPLOAD=false
FEATURE_NEW_FILE_UPLOAD_PERCENTAGE=0.0
FEATURE_NEW_FILE_UPLOAD_USERS=

# Enable enhanced query processing
FEATURE_ENHANCED_QUERY_PROCESSING=false
FEATURE_ENHANCED_QUERY_PROCESSING_PERCENTAGE=0.0
FEATURE_ENHANCED_QUERY_PROCESSING_USERS=

# Google OAuth Configuration
GOOGLE_CLIENT_ID="1048061338-qheo166a39ghotlfnm4njpmna6h50omr.apps.googleusercontent.com"
GOOGLE_CLIENT_SECRET="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"
GOOGLE_REDIRECT_URI="http://localhost:8001/auth/google/callback"

# JWT Configuration
JWT_SECRET_KEY=your_super_secret_jwt_key_change_this_in_production
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# MCP server ports (optional, defaults to 8100-8102)
MCP_BASE_PORT=8100
MCP_HOST=localhost
MCP_LOG_LEVEL=INFO
MCP_ENABLE_CACHING=true
MCP_CACHE_TTL=300
